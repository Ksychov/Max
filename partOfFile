class Minus extends Expression {
    String symbol = "-";
    Expression left;
    Expression right;

    public Minus (Expression left, Expression right) {
        this.left = left;
        this.right = right;
    }
    @Override
    public double calculate(Map<String, Double> variableToValue) {
        double leftValue = left.calculate(variableToValue);
        double rightValue = right.calculate(variableToValue);
        return leftValue - rightValue;
    }

}

class Multiply extends Expression {
    String symbol = "*";
    Expression left;
    Expression right;

    public Multiply (Expression left, Expression right) {
        this.left = left;
        this.right = right;
    }
    @Override
    public double calculate(Map<String, Double> variableToValue) {
        double leftValue = left.calculate(variableToValue);
        double rightValue = right.calculate(variableToValue);
        return leftValue * rightValue;
    }

}

class Division extends Expression{
    String symbol = "/";
    Expression left;
    Expression right;

    public Division (Expression left, Expression right) {
        this.left = left;
        this.right = right;
    }
    @Override
    public double calculate(Map<String, Double> variableToValue) {
        double leftValue = left.calculate(variableToValue);
        double rightValue = right.calculate(variableToValue);
        if (rightValue == 0) {
            throw new ArithmeticException("деление на ноль!");
            break;
        }
        return leftValue / rightValue;
    }

}
