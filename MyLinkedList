class Item { // один элемент списка
    int value; // значение в ячейке
    Item prev; // ссылка на предыдущий
    Item next; // ссылка на следующий

    public Item(int itemValue) {
        value = itemValue;
    }
}


public class MyLinkedList { // список, цепочка элементов Item
        Item head;
        Item tail;


        public void add(int value) {
            if (head == null) { // список пустой
                Item current = new Item(value);
                head = current;
                tail = current;
            } else { // список непустой
                Item current = new Item(value);
                tail.next = current;
                current.prev = tail;
                tail = current;
            }
        }


        // добавляет элемент в начало списка
        public void addFirst(int value) {
            if (head != null) {
                Item current = new Item(value); //добавляем элемент
                head.prev = current; //ставим обратную ссылку на этот элемент
                current.next = head; //ставим ссылку на следущий элемент
               head = current;
            } else {
                Item current = new Item(value);
                head = current;
                tail = current;
            }
        }

        public void print() {
            Item current = head;
            while (current != null) {
                System.out.println(current.value);
                current = current.next; // переход между элементами
            }
        }

        // удаляет первый элемент списка
        public void removeFirst() {
            Item current = head;
            head = current.next;
            head.prev = null;


        }

        // удаляет последний элемент списка
        public void removeLast() {
            Item current = tail;
            tail = current.prev;
            tail.next = null;
        }

        // возвращает количество элементов
        public void size() {
            Item current = head;
            int num = 0;
            while (current != null) {
                num++;
                current = current.next; // переход между элементами
            }
            System.out.println("The size is equal " + num);
        }
    }

    class ListTest {
        public static void main(String[] args) {
            MyLinkedList list = new MyLinkedList();
            list.add(1);
            list.add(2);
            list.add(3);
            list.add(4);
            list.add(5);
            list.print();
            System.out.println("--");
            list.addFirst(7);
            list.print();
            list.removeLast();
            System.out.println("--");
            list.print();
            list.size();
            System.out.println("--");
            list.removeFirst();
            list.print();

        }
    }
